
import java.util.List;
import javax.swing.table.DefaultTableModel;
import teletubies.database.DatabaseHandler;
import teletubies.model.MenuDB;
import teletubies.model.SaleOrderDB;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author Hall_PC
 */
public class ReportSale extends javax.swing.JPanel {

    /**
     * Creates new form ReportEmpPanel
     */
    public ReportSale() {
        initComponents();
        reportGen();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cookingTableScrollPane = new javax.swing.JScrollPane();
        cookingTable = new javax.swing.JTable();
        reportSaleTitleLabel = new javax.swing.JLabel();

        setLayout(null);

        cookingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Emp ID", "FoodName", "Price", "Quatity", "totalPrice", "Sale TimeStamp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        cookingTable.setAlignmentX(-10.0F);
        cookingTable.setGridColor(new java.awt.Color(0, 102, 255));
        cookingTable.setRowHeight(40);
        cookingTable.setRowMargin(5);
        cookingTableScrollPane.setViewportView(cookingTable);

        add(cookingTableScrollPane);
        cookingTableScrollPane.setBounds(40, 110, 1180, 550);

        reportSaleTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        reportSaleTitleLabel.setText("Report Sale");
        add(reportSaleTitleLabel);
        reportSaleTitleLabel.setBounds(500, 20, 270, 80);
    }// </editor-fold>//GEN-END:initComponents

    //Show report sale on gui
    private void reportGen() {
        try {
            DefaultTableModel dt = (DefaultTableModel) cookingTable.getModel();
            List<SaleOrderDB> orderTable = DatabaseHandler.findAllOrder(new DatabaseHandler());
            List<MenuDB> menuTable = DatabaseHandler.findAllMenu(new DatabaseHandler());
            int length = orderTable.size();
            if (length > 0) {
                for (int i = 0; i < length; i++) {
                    int foodId = orderTable.get(i).getFoodID() - 1;
                    dt.addRow(new Object[]{orderTable.get(i).getOrderID(),
                        orderTable.get(i).getEmployeeID(),
                        menuTable.get(foodId).getFoodName(),
                        menuTable.get(foodId).getFoodPrice(),
                        orderTable.get(i).getQuantity(),
                        orderTable.get(i).getTotalPrice(),
                        orderTable.get(i).getTimestamp()});
                }
            }
        } catch (Exception ex) {
            System.out.println("No order yet.");;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable cookingTable;
    private javax.swing.JScrollPane cookingTableScrollPane;
    private javax.swing.JLabel reportSaleTitleLabel;
    // End of variables declaration//GEN-END:variables
}
